// Copyright (c) Tetrate, Inc 2020 All Rights Reserved.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.2
// source: tsb/rbac/v2/options.proto

package extensions

import (
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RequiredPermission
//
// Configures the sets of permissions that are required to invoke the method where this option is
// applied.
type RequiredPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The required set of permissions. The full name of each permission (such as ReadApplication)
	// will be inferred from the name of the method where this option is applied.
	Permissions []Permission `protobuf:"varint,1,rep,packed,name=permissions,proto3,enum=tetrateio.api.tsb.rbac.v2.Permission" json:"permissions,omitempty"`
	// Set of raw permission names values. Only use this if the method being protected does not follow
	// the common naming convention and the proper name of the permission cannot be inferred just by
	// using the Permission enum and the method name.
	RawPermissions []string `protobuf:"bytes,2,rep,name=raw_permissions,json=rawPermissions,proto3" json:"raw_permissions,omitempty"`
	// When this flag is set to true, the permission checks will not be made at the API surface.
	// This is usually needed when there is not an explicit set of permissions that can be
	// preconfigured for the API methods, so the access control checks will be implemented at runtime
	// by the application.
	// The default value is 'false' and will only be taken into account if the permission properties
	// are empty. If any permission is set, this flag will be ignored.
	DeferPermissionCheckToApplication bool `protobuf:"varint,3,opt,name=defer_permission_check_to_application,json=deferPermissionCheckToApplication,proto3" json:"defer_permission_check_to_application,omitempty"`
}

func (x *RequiredPermission) Reset() {
	*x = RequiredPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tsb_rbac_v2_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequiredPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequiredPermission) ProtoMessage() {}

func (x *RequiredPermission) ProtoReflect() protoreflect.Message {
	mi := &file_tsb_rbac_v2_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequiredPermission.ProtoReflect.Descriptor instead.
func (*RequiredPermission) Descriptor() ([]byte, []int) {
	return file_tsb_rbac_v2_options_proto_rawDescGZIP(), []int{0}
}

func (x *RequiredPermission) GetPermissions() []Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *RequiredPermission) GetRawPermissions() []string {
	if x != nil {
		return x.RawPermissions
	}
	return nil
}

func (x *RequiredPermission) GetDeferPermissionCheckToApplication() bool {
	if x != nil {
		return x.DeferPermissionCheckToApplication
	}
	return false
}

var file_tsb_rbac_v2_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.ServiceOptions)(nil),
		ExtensionType: (*RequiredPermission)(nil),
		Field:         2001,
		Name:          "tetrateio.api.tsb.rbac.v2.default_requires",
		Tag:           "bytes,2001,opt,name=default_requires",
		Filename:      "tsb/rbac/v2/options.proto",
	},
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*RequiredPermission)(nil),
		Field:         2001,
		Name:          "tetrateio.api.tsb.rbac.v2.requires",
		Tag:           "bytes,2001,opt,name=requires",
		Filename:      "tsb/rbac/v2/options.proto",
	},
}

// Extension fields to descriptor.ServiceOptions.
var (
	// optional tetrateio.api.tsb.rbac.v2.RequiredPermission default_requires = 2001;
	E_DefaultRequires = &file_tsb_rbac_v2_options_proto_extTypes[0]
)

// Extension fields to descriptor.MethodOptions.
var (
	// optional tetrateio.api.tsb.rbac.v2.RequiredPermission requires = 2001;
	E_Requires = &file_tsb_rbac_v2_options_proto_extTypes[1]
)

var File_tsb_rbac_v2_options_proto protoreflect.FileDescriptor

var file_tsb_rbac_v2_options_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x73, 0x62, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x74, 0x65, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x73, 0x62, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x76, 0x32, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x74, 0x73, 0x62, 0x2f, 0x72, 0x62,
	0x61, 0x63, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x47,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x74, 0x72, 0x61, 0x74, 0x65, 0x69, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x73, 0x62, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x61, 0x77, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x61, 0x77, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x50, 0x0a, 0x25, 0x64, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x21, 0x64, 0x65, 0x66, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x7a, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x74, 0x65, 0x74, 0x72, 0x61, 0x74, 0x65, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x73, 0x62, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x3a, 0x6a,
	0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x65, 0x74, 0x72, 0x61, 0x74, 0x65, 0x69, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x73, 0x62, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x73, 0x62, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f,
	0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tsb_rbac_v2_options_proto_rawDescOnce sync.Once
	file_tsb_rbac_v2_options_proto_rawDescData = file_tsb_rbac_v2_options_proto_rawDesc
)

func file_tsb_rbac_v2_options_proto_rawDescGZIP() []byte {
	file_tsb_rbac_v2_options_proto_rawDescOnce.Do(func() {
		file_tsb_rbac_v2_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_tsb_rbac_v2_options_proto_rawDescData)
	})
	return file_tsb_rbac_v2_options_proto_rawDescData
}

var file_tsb_rbac_v2_options_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tsb_rbac_v2_options_proto_goTypes = []interface{}{
	(*RequiredPermission)(nil),        // 0: tetrateio.api.tsb.rbac.v2.RequiredPermission
	(Permission)(0),                   // 1: tetrateio.api.tsb.rbac.v2.Permission
	(*descriptor.ServiceOptions)(nil), // 2: google.protobuf.ServiceOptions
	(*descriptor.MethodOptions)(nil),  // 3: google.protobuf.MethodOptions
}
var file_tsb_rbac_v2_options_proto_depIdxs = []int32{
	1, // 0: tetrateio.api.tsb.rbac.v2.RequiredPermission.permissions:type_name -> tetrateio.api.tsb.rbac.v2.Permission
	2, // 1: tetrateio.api.tsb.rbac.v2.default_requires:extendee -> google.protobuf.ServiceOptions
	3, // 2: tetrateio.api.tsb.rbac.v2.requires:extendee -> google.protobuf.MethodOptions
	0, // 3: tetrateio.api.tsb.rbac.v2.default_requires:type_name -> tetrateio.api.tsb.rbac.v2.RequiredPermission
	0, // 4: tetrateio.api.tsb.rbac.v2.requires:type_name -> tetrateio.api.tsb.rbac.v2.RequiredPermission
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	3, // [3:5] is the sub-list for extension type_name
	1, // [1:3] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tsb_rbac_v2_options_proto_init() }
func file_tsb_rbac_v2_options_proto_init() {
	if File_tsb_rbac_v2_options_proto != nil {
		return
	}
	file_tsb_rbac_v2_permissions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tsb_rbac_v2_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequiredPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tsb_rbac_v2_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_tsb_rbac_v2_options_proto_goTypes,
		DependencyIndexes: file_tsb_rbac_v2_options_proto_depIdxs,
		MessageInfos:      file_tsb_rbac_v2_options_proto_msgTypes,
		ExtensionInfos:    file_tsb_rbac_v2_options_proto_extTypes,
	}.Build()
	File_tsb_rbac_v2_options_proto = out.File
	file_tsb_rbac_v2_options_proto_rawDesc = nil
	file_tsb_rbac_v2_options_proto_goTypes = nil
	file_tsb_rbac_v2_options_proto_depIdxs = nil
}
