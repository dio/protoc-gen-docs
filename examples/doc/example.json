{
  "files": [
    {
      "name": "Booking.proto",
      "description": "",
      "package": "com.example",
      "packageComments": "ServiceDefinition describes the properties of services running on\nVMs or services outside the mesh. This service definition is\nintended to be authored by the cluster operator where access to\nthis service is desired.\n\nThe following example declares a VM service called `details` in the\n`bookinfo` namespace. The service has no sidecars and requires\nsimple TLS connections. The VM service is expected to receive\ntraffic from the ingress Gateway.\n\n```yaml\napiVersion: registry.tetrate.io/v1alpha1\nkind: ServiceDefinition\nmetadata:\n  name: details\n  namespace: bookinfo\nspec:\n  hostname: details.prod.internal.company.com\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  - number: 443\n    name: https\n    protocol: HTTPS\n  sidecarsPresent: false\n  externalServiceTlsSettings:\n    tlsMode: SIMPLE\n    caCertificates: /path/to/ca/cert/to/verify/server/cert\n  endpointSource:\n    manual:\n      values:\n      - address: 1.1.1.1\n      - address: 2.2.2.2\n```\n\nIn the above example, services in the bookinfo namespace can access\nthe details service by using\nhttps://details.prod.internal.company.com . The sidecar would do a\nSNI Passthrough and load balance the traffic among the two\nendpoints. Alternatively, they could also access the service as\nplaintext http://details.prod.internal.company.com. The Sidecar in\na kubernetes pod would intercept the traffic, and initiate simple\nTLS connection to the destination appropriately.",
      "labels": {
        "description": "Workspace is a configuration domain for set of namespaces and Workspaces.",
        "location": "https://tetrate.io/docs/reference/config/v2/workspace.html",
        "title": "Workspace"
      },
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Booking",
          "longName": "Booking",
          "fullName": "com.example.Booking",
          "description": "Represents the booking of a vehicle.\u003cbr/\u003e\u003cbr/\u003eVehicles are some cool shit. But drive carefully!",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "vehicle_id",
              "description": "ID of booked vehicle.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "defaultValue": "",
              "Hide": false
            },
            {
              "name": "customer_id",
              "description": "Customer that booked the vehicle.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "defaultValue": "",
              "Hide": false
            },
            {
              "name": "status",
              "description": "Status of the booking.",
              "label": "",
              "type": "BookingStatus",
              "longType": "BookingStatus",
              "fullType": "com.example.BookingStatus",
              "ismap": false,
              "defaultValue": "",
              "Hide": false
            },
            {
              "name": "confirmation_sent",
              "description": "Has booking confirmation been sent?",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "defaultValue": "",
              "Hide": false
            },
            {
              "name": "payment_received",
              "description": "Has payment been received?",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "defaultValue": "",
              "Hide": false
            }
          ]
        },
        {
          "name": "BookingStatus",
          "longName": "BookingStatus",
          "fullName": "com.example.BookingStatus",
          "description": "Represents the status of a vehicle booking.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique booking status ID.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "defaultValue": "",
              "options": {
                "google.api.field_behavior": {
                  "Behavior": "REQUIRED"
                }
              },
              "Hide": false
            },
            {
              "name": "description",
              "description": "Booking status description. E.g. \"Active\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": "",
              "options": {
                "validator.field": [
                  {
                    "name": "string_not_empty",
                    "value": true
                  },
                  {
                    "name": "length_lt",
                    "value": 255
                  }
                ]
              },
              "Hide": false
            }
          ]
        },
        {
          "name": "BookingStatusID",
          "longName": "BookingStatusID",
          "fullName": "com.example.BookingStatusID",
          "description": "Represents the booking status ID.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": []
        },
        {
          "name": "EmptyBookingMessage",
          "longName": "EmptyBookingMessage",
          "fullName": "com.example.EmptyBookingMessage",
          "description": "An empty message for testing",
          "hasExtensions": false,
          "hasFields": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "BookingService",
          "longName": "BookingService",
          "fullName": "com.example.BookingService",
          "description": "Service for handling vehicle bookings.",
          "methods": [
            {
              "name": "BookVehicle",
              "description": "Used to book a vehicle. Pass in a Booking and a BookingStatus will be returned.",
              "requestType": "Booking",
              "requestLongType": "Booking",
              "requestFullType": "com.example.Booking",
              "requestStreaming": false,
              "responseType": "BookingStatus",
              "responseLongType": "BookingStatus",
              "responseFullType": "com.example.BookingStatus",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/api/bookings/vehicle/{vehicle_id}",
                      "body": "*"
                    }
                  ]
                },
                "tetrateio.api.tsb.rbac.v2.requires": {
                  "Permissions": "READ",
                  "DeferPermissioCheckToApplication": true
                },
                "tetrateio.api.tsb.types.v2.spec": {
                  "AtType": "type.googleapis.com/istio.networking.v1beta1.VirtualService"
                }
              }
            },
            {
              "name": "BookingUpdates",
              "description": "Used to subscribe to updates of the BookingStatus.",
              "requestType": "BookingStatusID",
              "requestLongType": "BookingStatusID",
              "requestFullType": "com.example.BookingStatusID",
              "requestStreaming": false,
              "responseType": "BookingStatus",
              "responseLongType": "BookingStatus",
              "responseFullType": "com.example.BookingStatus",
              "responseStreaming": true
            }
          ],
          "options": {
            "tetrateio.api.tsb.rbac.v2.default_requires": {
              "Permissions": "SET_POLICY",
              "DeferPermissioCheckToApplication": false
            }
          }
        }
      ],
      "options": {
        "deprecated": true
      }
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}