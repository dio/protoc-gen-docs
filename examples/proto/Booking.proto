syntax = "proto3";

// $title: Workspace
// $description: Workspace is a configuration domain for set of namespaces and Workspaces.
// $location: https://tetrate.io/docs/reference/config/v2/workspace.html

// A Workspace carves a chunk of the Workspace resources owned by a
// tenant into an isolated configuration domain.
//
// The following example claims `ns1` and `ns2` namespaces across all
// Workspaces owned by the tenant `mycompany`.
package com.example;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

// Represents the booking status ID.
message BookingStatusID {
  // Unique booking status ID.
  // $hide_from_docs
  int32 id = 1;
}

// Represents the status of a vehicle booking.
message BookingStatus {
  // Unique booking status ID.
  int32 id           = 1 [(google.api.field_behavior) = REQUIRED];
  // Booking status description. E.g. "Active".
  string description = 2 [(validator.field) = {string_not_empty: true, length_lt: 255}];
}


// Represents the booking of a vehicle.
//
// Vehicles are some cool shit. But drive carefully!
message Booking {
  // ID of booked vehicle.
  int32 vehicle_id     = 1;
  // Customer that booked the vehicle.
  int32 customer_id    = 2;
  // Status of the booking.
  BookingStatus status = 3;

  // Has booking confirmation been sent?
  bool confirmation_sent = 4;

  // Has payment been received?
  bool payment_received = 5;
}

// An empty message for testing
message EmptyBookingMessage {
}

// Service for handling vehicle bookings.
service BookingService {
  // Used to book a vehicle. Pass in a Booking and a BookingStatus will be returned.
  rpc BookVehicle (Booking) returns (BookingStatus) {
    option (google.api.http) = {
      post: "/api/bookings/vehicle/{vehicle_id}"
      body: "*"
    };
  }

  // Used to subscribe to updates of the BookingStatus.
  rpc BookingUpdates (BookingStatusID) returns (stream BookingStatus);
}
